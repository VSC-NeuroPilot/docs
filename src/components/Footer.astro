---
// We reuse Astro's Footer component here
import Default from '@astrojs/starlight/components/Footer.astro';
import { Icon } from '@astrojs/starlight/components';
// Import version info
import { clientVersion, docsNext } from '@/utils/version';
import { BASE_GITHUB_ORG } from '@consts/links';

// Gets the current path
const currentPath = Astro.url.pathname;
let currentTopic: string | null;
if (currentPath !== import.meta.env.BASE_URL + "/") {
    const path = currentPath.substring(5).split("/")[1]; // for some reason splitting by "/" adds an empty string between each non-empty string item, so we're grabbing the second item, not the first
    switch (path) {
        case "client":
            currentTopic = "ui"
            break;
        case "meta":
            currentTopic = "meta"
            break;
        case "images":
            currentTopic = "containers"
            break;
        case "server":
            currentTopic = "workspace"
            break;
        default:
            currentTopic = null
            break;
    }
} else {
    currentTopic = ""
}

// Logic needs to be placed such that we can case switch the path of the request and change the footer's text accordingly
// Otherwise it would make no sense if, for example, the server version's topic has the footer displaying the client version
// For now we can get away without it since we really only have the client-side code public, though I would like to test this using the meta topic
---
<footer>
    <hr class="border" />
    {docsNext === true ? <p class="center">A commit has been pushed since the last confirmed update. Some info may be outdated.</p> : ""}
    <p class="center">
    {
    currentTopic === "meta" 
        ?
    <>You can find all our repositories on <a href={BASE_GITHUB_ORG}>our GitHub organization</a>.</>
        :
    currentTopic === "ui"
        ?
    clientVersion ? `NeuroPilot docs are up-to-date for extension version ${clientVersion}` : "No client version was defined. Either this is a dev environment or something went wrong during build."
        :
    currentTopic === "containers"
        ?
    <a href={`https://github.com/orgs/VSC-NeuroPilot/packages`}>View currently published containers here.</a> <Icon name="seti:docker" class="inline-icon" />
        :
    ""
    }
    </p>
    <p class="center">
    {
    currentTopic === "ui"
        ?
    clientVersion ? <a href={`https://github.com/VSC-NeuroPilot/neuropilot/tree/${clientVersion}`}>The tag's commit can be found here.</a> <Icon name="github" class="inline-icon" /> : ""
        :
    currentTopic === "containers"
        ?
    <>
        What's a container? A container is a mini virtual machine that can be spawned easily, and often comes with build instructions.
        You can read more about it <a href="https://medium.com/@hufaaz-in-the-cloud/what-is-containerization-a-beginners-guide-to-understanding-containerization-b0c6ca1827e3">here</a>.
    </>
        :
    ""
    }
    </p>
    <Default>
        <slot />
    </Default>
</footer>

<style>
    .center {
        text-align: center;
    }
    .border {
        border: none;
        border-top: 1px solid #ccc;
        margin: 1em 0;
        margin-bottom: 1.25rem;
        width: 100%;
    }
</style>